
###########################

This is an example to show how GANG is used to perform Sybil detection in directed social graphs.

We use a real directed social graph (i.e., Pokec). As an illustrative example, we extract a connected component that contains 10,000 nodes from the graph as the benign region. Moreover, we synthesize the Sybil region as a replicate of the benign region and add (bidirectional, unidirectional Sybil-to-benign, or/and unidirectional benign-to-Sybil) attack edges between the two regions uniformly at random. The Pokec dataset is from SNAP (http://snap.stanford.edu/data/index.html). The extracted connected component has 90,065 edges. In this example, we add 1,000 bidirectional attack edges, 1,000 unidirectional Sybil-to-benign attack edges, and 100 unidirectional benign-to-Sybil attack edges. We randomly select 100 Sybils and 100 benign nodes to form the training dataset (train.txt). The remaining nodes form the testing dataset (test.txt).


 
Step 1: Compile GANG:

g++ GANG.cpp -pthread -O3 -o GANG


Step 2: Execute GANG:

./GANG -graphfile Directed_Pokec/graph.txt -trainfile Directed_Pokec/train.txt -postfile Directed_Pokec/post_GANG.txt -mIter 6 -tp 0.6 -tn 0.4 -wg 0 -wei 0.6 -nt 1 


Step 3: Evaluate GANG:
 

./metric -testfile Directed_Pokec/test.txt -postfile Directed_Pokec/post_GANG.txt

###########################




